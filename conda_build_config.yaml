# This differs from target_platform in that it determines what subdir the compiler
#    will target, not what subdir the compiler package will be itself.
#    For example, we need a win-64 vs2008_win-32 package, so that we compile win-32
#    code on win-64 miniconda.
cross_compiler_target_platform:  # [win]
  - win-64                     # [win]
c_compiler:
  - gcc                        # [linux]
  - clang                      # [osx]
  - vs2019                     # [win]
c_compiler_version:            # [unix]
  - 10                         # [linux]
  - 14                         # [osx]
  - 7                          # [os.environ.get("CF_CUDA_ENABLED", "False") == "True" and linux64]
  - 9                          # [os.environ.get("CF_CUDA_ENABLED", "False") == "True" and linux64]
  - 10                         # [os.environ.get("CF_CUDA_ENABLED", "False") == "True" and linux64]
  - 10                         # [os.environ.get("CF_CUDA_ENABLED", "False") == "True" and linux64]
cxx_compiler:
  - gxx                        # [linux]
  - clangxx                    # [osx]
  - vs2019                     # [win]
cxx_compiler_version:          # [unix]
  - 10                         # [linux]
  - 14                         # [osx]
  - 7                          # [os.environ.get("CF_CUDA_ENABLED", "False") == "True" and linux64]
  - 9                          # [os.environ.get("CF_CUDA_ENABLED", "False") == "True" and linux64]
  - 10                         # [os.environ.get("CF_CUDA_ENABLED", "False") == "True" and linux64]
  - 10                         # [os.environ.get("CF_CUDA_ENABLED", "False") == "True" and linux64]
llvm_openmp:                   # [osx]
  - 14                         # [osx]
fortran_compiler:              # [unix or win64]
  - gfortran                   # [linux64 or (osx and x86_64)]
  - gfortran                   # [aarch64 or ppc64le or armv7l or s390x]
  - flang                      # [win64]
fortran_compiler_version:      # [unix or win64]
  - 10                         # [linux]
  - 11                         # [osx]
  - 5                          # [win64]
  - 7                          # [os.environ.get("CF_CUDA_ENABLED", "False") == "True" and linux64]
  - 9                          # [os.environ.get("CF_CUDA_ENABLED", "False") == "True" and linux64]
  - 10                         # [os.environ.get("CF_CUDA_ENABLED", "False") == "True" and linux64]
  - 10                         # [os.environ.get("CF_CUDA_ENABLED", "False") == "True" and linux64]
m2w64_c_compiler:              # [win]
  - m2w64-toolchain            # [win]
m2w64_cxx_compiler:            # [win]
  - m2w64-toolchain            # [win]
m2w64_fortran_compiler:        # [win]
  - m2w64-toolchain            # [win]
CMAKE_GENERATOR:               # [win]
  - NMake Makefiles            # [win]

cuda_compiler:                 # [linux or win]
  - nvcc                       # [linux or win]
cuda_compiler_version:
  - None
  - 10.2                       # [(linux64 or win) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - 11.0                       # [(linux64 or win) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - 11.1                       # [(linux64 or win) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - 11.2                       # [(linux64 or win) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
cuda_compiler_version_min:
  - None                       # [osx]
  - 10.2                       # [linux64 or win]
  - 11.2                       # [linux and (ppc64le or aarch64)]
cudnn:
  - undefined
  - 7                          # [(linux64 or win) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - 8                          # [(linux64 or win) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - 8                          # [(linux64 or win) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - 8                          # [(linux64 or win) and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]

_libgcc_mutex:
  - 0.1 conda_forge
#
# Go Compiler Options
#

# The basic go-compiler with CGO disabled,
# It generates fat binaries without libc dependencies
# The activation scripts will set your CC,CXX and related flags
# to invalid values.
go_compiler:
  - go-nocgo
# The go compiler build with CGO enabled.
# It can generate fat binaries that depend on conda's libc.
# You should use this compiler if the underlying
# program needs to link against other C libraries, in which
# case make sure to add  'c,cpp,fortran_compiler' for unix
# and the m2w64 equivalent for windows.
cgo_compiler:
  - go-cgo
# The following are helpful variables to simplify go meta.yaml files.
target_goos:
  - linux                      # [linux]
  - darwin                     # [osx]
  - windows                    # [win]
target_goarch:
  - amd64                      # [x86_64]
  - arm64                      # [arm64 or aarch64]
  - ppc64le                    # [ppc64le]
target_goexe:
  -                            # [unix]
  - .exe                       # [win]
target_gobin:
  - '${PREFIX}/bin/'           # [unix]
  - '%PREFIX%\bin\'            # [win]

# Rust Compiler Options
rust_compiler:
  - rust

macos_machine:                 # [osx]
  - x86_64-apple-darwin13.4.0  # [osx and x86_64]
  - arm64-apple-darwin20.0.0   # [osx and arm64]
MACOSX_DEPLOYMENT_TARGET:      # [osx]
  - 11.0                       # [osx and arm64]
  - 10.9                       # [osx and x86_64]
target_platform:               # [win]
  - win-64                     # [win]
VERBOSE_AT:
  - V=1
VERBOSE_CM:
  - VERBOSE=1

# dual build configuration
channel_sources:
  - conda-forge                                 # [not s390x]
  - https://conda-web.anaconda.org/conda-forge  # [s390x]

channel_targets:
  - conda-forge main

cdt_name:  # [linux]
  - cos6   # [linux64 and os.environ.get("DEFAULT_LINUX_VERSION", "cos6") == "cos6"]
  - cos7   # [linux64 and os.environ.get("DEFAULT_LINUX_VERSION", "cos6") == "cos7"]
  - cos7   # [linux and aarch64]
  - cos7   # [linux and ppc64le]
  - cos7   # [linux and armv7l]
  - cos7   # [linux and s390x]

  - cos6   # [linux64 and os.environ.get("CF_CUDA_ENABLED", "False") == "True" and os.environ.get("DEFAULT_LINUX_VERSION", "cos6") == "cos6"]
  - cos7   # [linux64 and os.environ.get("CF_CUDA_ENABLED", "False") == "True" and os.environ.get("DEFAULT_LINUX_VERSION", "cos6") == "cos7"]
  - cos7   # [linux64 and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - cos7   # [linux64 and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  - cos7   # [linux64 and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]

docker_image:                                   # [os.environ.get("BUILD_PLATFORM", "").startswith("linux-")]
  - quay.io/condaforge/linux-anvil-cos7-x86_64  # [os.environ.get("BUILD_PLATFORM") == "linux-64"]
  - quay.io/condaforge/linux-anvil-aarch64      # [os.environ.get("BUILD_PLATFORM") == "linux-aarch64"]
  - quay.io/condaforge/linux-anvil-ppc64le      # [os.environ.get("BUILD_PLATFORM") == "linux-ppc64le"]
  - quay.io/condaforge/linux-anvil-armv7l       # [os.environ.get("BUILD_PLATFORM") == "linux-armv7l"]

  - quay.io/condaforge/linux-anvil-cos7-cuda:10.2  # [linux64 and os.environ.get("CF_CUDA_ENABLED", "False") == "True" and os.environ.get("BUILD_PLATFORM") == "linux-64"]
  - quay.io/condaforge/linux-anvil-cuda:11.0       # [linux64 and os.environ.get("CF_CUDA_ENABLED", "False") == "True" and os.environ.get("BUILD_PLATFORM") == "linux-64"]
  - quay.io/condaforge/linux-anvil-cuda:11.1       # [linux64 and os.environ.get("CF_CUDA_ENABLED", "False") == "True" and os.environ.get("BUILD_PLATFORM") == "linux-64"]
  - quay.io/condaforge/linux-anvil-cuda:11.2       # [linux64 and os.environ.get("CF_CUDA_ENABLED", "False") == "True" and os.environ.get("BUILD_PLATFORM") == "linux-64"]

zip_keys:
  -                             # [unix]
    - c_compiler_version        # [unix]
    - cxx_compiler_version      # [unix]
    - fortran_compiler_version  # [unix]
    - cudnn                     # [linux and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
    - cuda_compiler_version     # [linux and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
    - cdt_name                  # [linux and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
    - docker_image              # [linux and os.environ.get("CF_CUDA_ENABLED", "False") == "True" and os.environ.get("BUILD_PLATFORM", "").startswith("linux-")]
  -                             # [win64 and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
    - cudnn                     # [win64 and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
    - cuda_compiler_version     # [win64 and os.environ.get("CF_CUDA_ENABLED", "False") == "True"]
  -
    - python
    - numpy
    - python_impl


# aarch64 specifics because conda-build sets many things to centos 6
# this can probably be removed when conda-build gets updated defaults
# for aarch64
cdt_arch: aarch64                       # [aarch64]
BUILD: aarch64-conda_cos7-linux-gnu     # [aarch64]

# armv7l specifics because conda-build sets many things to centos 6
# this can probably be removed when conda-build gets updated defaults
# for aarch64
cdt_arch: armv7l                          # [armv7l]
BUILD: armv7-conda_cos7-linux-gnueabihf   # [armv7l]

pin_run_as_build:
  # boost is special, see https://github.com/conda-forge/boost-cpp-feedstock/pull/82
  boost:
    max_pin: x.x.x
  boost-cpp:
    max_pin: x.x.x
  # TODO: add run_exports to the following feedstocks
  flann:
    max_pin: x.x.x
  graphviz:
    max_pin: x
  libsvm:
    max_pin: x
  netcdf-cxx4:
    max_pin: x.x
  occt:
    max_pin: x.x
  poppler:
    max_pin: x.x
  r-base:
    max_pin: x.x
    min_pin: x.x
  vlfeat:
    max_pin: x.x.x

# Pinning packages

# blas
libblas:
  - 3.9 *netlib
libcblas:
  - 3.9 *netlib
liblapack:
  - 3.9 *netlib
liblapacke:
  - 3.9 *netlib
blas_impl:
  - openblas
  - mkl          # [x86 or x86_64]
  - blis         # [x86 or x86_64]

# keep in sync with libabseil{,_static}
abseil_cpp:
  - '20220623.0'
alsa_lib:
  - 1.2.8
antic:
  - 0.2
aom:
  - 3.5
arb:
  - '2.23'
arpack:
  - 3.7
arrow_cpp:
  - 9.0.0
  - 8.0.1
  - 7.0.1
  - 6.0.2
assimp:
  - 5.2.4
attr:
  - 2.5
aws_c_auth:
  - 0.6.21
aws_c_cal:
  - 0.5.20
aws_c_common:
  - 0.8.5
aws_c_event_stream:
  - 0.2.15
aws_c_http:
  - 0.6.27
aws_c_io:
  - 0.13.11
aws_c_mqtt:
  - 0.7.13
aws_c_s3:
  - 0.1.51
aws_c_sdkutils:
  - 0.1.7
aws_checksums:
  - 0.1.13
aws_crt_cpp:
  - 0.18.16
aws_sdk_cpp:
  - 1.9.375
boost:
  - 1.78.0
boost_cpp:
  - 1.78.0
bzip2:
  - 1
c_ares:
  - 1
cairo:
  - 1
capnproto:
  - 0.10.2
ccr:
  - 1.3
cfitsio:
  - 4.1.0
coin_or_cbc:
  - 2.10
coincbc:
  - 2.10
coin_or_cgl:
  - 0.60
coin_or_clp:
  - 1.17
coin_or_osi:
  - 0.108
coin_or_utils:
  - 2.11
console_bridge:
  - 1.0
cutensor:
  - 1
curl:
  - 7
davix:
  - '0.8'
dbus:
  - 1
eclib:
  - '20221012'
exiv2:
  - 0.27
expat:
  - 2
ffmpeg:
  - '4.4'
fftw:
  - 3
flann:
  - 1.9.1
fmt:
  - '9'
fontconfig:
  - 2
freetype:
  - 2
gct:
  - 6.2.1629922860
gf2x:
  - '1.3'
gdk_pixbuf:
  - 2
gnuradio_core:
  - 3.10.4
gnutls:
  - 3.7
gsl:
  - 2.7
gsoap:
  - 2.8.123
gstreamer:
  - '1.20'
gst_plugins_base:
  - '1.20'
gdal:
  - '3.5'
geos:
  - 3.11.0
geotiff:
  - 1.7.1
gfal2:
  - '2.21'
gflags:
  - 2.2
giflib:
  - 5.2
glew:
  - 2.1
glib:
  - '2'
glog:
  - '0.6'
glpk:
  - '5.0'
gmp:
  - 6
google_cloud_cpp:
  - '2.3.0'
google_cloud_cpp_common:
  - 0.25.0
googleapis_cpp:
  - '0.10'
graphviz:
  - '6'
# keep in sync with libgrpc
grpc_cpp:
  - '1.49'
harfbuzz:
  - '5'
hdf4:
  - 4.2.15
hdf5:
  - 1.12.1
icu:
  - '70'
imath:
  - '3.1'
ipopt:
  - 3.14.10
isl:
  - '0.25'
jasper:
  - '2'
jpeg:
  - 9
lcms:
  - 2
lerc:
  - '4'
libjpeg_turbo:
  - 2
libev:
  - 4.33
json_c:
  - '0.16'
jsoncpp:
  - 1.9.5
kealib:
  - 1.4
krb5:
  - '1.19'
libabseil:
  - '20220623.0'
libabseil_static:
  - '20220623.0'
libarchive:
  - 3.5
libavif:
  - 0.11.1
libblitz:
  - 1.0.2
libcint:
  - '5.1'
libcurl:
  - 7
libcrc32c:
  - 1.1
libdap4:
  - 3.20.6
libdeflate:
  - '1.14'
libeantic:
  - 1
libevent:
  - 2.1.10
libexactreal:
  - 2
libffi:
  - '3.3'
libflatsurf:
  - 3
libflint:
  - '2.9'
libgdal:
  - '3.5'
libgit2:
  - '1.5'
libgrpc:
  - '1.49'
libhugetlbfs:
  - 2
libhwy:
  - '1.0'
libiconv:
  - 1
libidn2:
  - 2
libintervalxt:
  - 3
libkml:
  - 1.3
libiio:
  - 0
libmatio:
  - 1.5.21
libmicrohttpd:
  - 0.9
libnetcdf:
  - 4.8.1
libopencv:
  - 4.6.0
libpcap:
  - '1.10'
libpng:
  - 1.6
libprotobuf:
  - '3.21'
librdkafka:
  - '1.9'
librsvg:
  - 2
libsecret:
  - 0.18
libsndfile:
  - 1.1
libspatialindex:
  - 1.9.3
libssh:
  - 0.10
libssh2:
  - 1
libsvm:
  - '325'
libthrift:
  - 0.16.0
libtiff:
  - 4
libunwind:
  - '1.6'
libv8:
  - 8.9.83
libvips:
  - 8
libwebp:
  - 1
libwebp_base:
  - 1
libxml2:
  - 2.10
libxsmm:
  - 1
libuuid:
  - 2
libzip:
  - 1
log4cxx:
  - 0.11.0
lz4_c:
  - '1.9.3'
lzo:
  - 2
metis:
  - 5.1
mimalloc:
  - 2.0.7
mkl:
  - 2022
mkl_devel:
  - 2022
mpich:
  - 4
mpfr:
  - 4
mumps_mpi:
  - 5.2.1
mumps_seq:
  - 5.2.1
nccl:
  - 2
ncurses:
  - 6
netcdf_cxx4:
  - 4.3
netcdf_fortran:
  - 4.5
nettle:
  - '3.8'
nodejs:
  - '18'
  - '16'
  - '14'  # [not (osx and arm64)]
nss:
  - 3
nspr:
  - 4
nlopt:
  - '2.7'
ntl:
  - '11.4.3'
# we build for the oldest version possible of numpy for forward compatibility
numpy:
  # part of a zip_keys: python, python_impl, numpy
#  - 1.20
  - 1.20
#  - 1.21
occt:
  - 7.6
openblas:
  - 0.3.*
openexr:
  - '3.1'
openh264:
  - '2.3.1'
openjpeg:
  - '2'
openmpi:
  - 4
openssl:
  - 1.1.1
openturns:
  - '1.19'
orc:
  - 1.8.0
pango:
  - 1.50
pari:
  - 2.13.* *_pthread
perl:
  - 5.32.1
petsc:
  - '3.17'
petsc4py:
  - '3.17'
slepc:
  - '3.17'
slepc4py:
  - '3.17'
svt_av1:
  - 1.3.0
p11_kit:
  - '0.24'
pcre:
  - '8'
pcre2:
  - '10.37'
pixman:
  - 0
poco:
  - 1.12.4
poppler:
  - '22.04'
proj:
  - 9.1.0
pulseaudio:
  - 14.0
pybind11_abi:
  - 4
python:
  # part of a zip_keys: python, python_impl, numpy
#  - 3.8.* *_cpython
  - 3.9.* *_cpython
#  - 3.10.* *_cpython
python_impl:
  # part of a zip_keys: python, python_impl, numpy
#  - cpython
  - cpython
#  - cpython
pytorch:
  - '1.12'
    #qt:
    #  - 5.12
qtkeychain:
  - '0.13'
re2:
  - 2022.06.01
readline:
  - "8"
rocksdb:
  - "6.10"
root_base:
  - 6.26.8
ruby:
  - 2.5
  - 2.6
r_base:
  - 4.1
  - 4.2   # [not win]
scotch:
  - 6.0.9
ptscotch:
  - 6.0.9
s2n:
  - 1.3.28
singular:
  - 4.2.1.p3
snappy:
  - 1
soapysdr:
  - '0.8'
sox:
  - 14.4.2
spdlog:
  - '1.10'
sqlite:
  - 3
starlink_ast:
  - '9.2.7'
suitesparse:
  - 5
superlu_dist:
  - 7.1.1
tbb:
  - '2021'
tbb_devel:
  - '2021'
thrift_cpp:
  - 0.16.0
tinyxml2:
  - 9
tk:
  - 8.6                # [not ppc64le]
tiledb:
  - '2.11'
ucx:
  - 1.12.1
uhd:
  - 4.3.0
urdfdom:
  - 3.1
vc:                    # [win]
  - 14                 # [win]
vlfeat:
  - 0.9.21
volk:
  - '2.5'
vtk:
  - 9.1.0
wcslib:
  - '7.7'
wxwidgets:
  - '3.2'
x264:
  - '1!164.*'
x265:
  - '3.5'
xerces_c:
  - 3.2
xrootd:
  - '5'
xz:
  - 5
zeromq:
  - 4.3.4
zfp:
  - 1.0
zlib:
  - 1.2
zlib_ng:
  - 2.0
zstd:
  - '1.5'
_libgcc_mutex:
  - 0.1=conda_forge

_openmp_mutex:
  - 4.5=2_gnu

alsa_lib:
  - 1.2.6.1=h7f98852_0

anaconda_client:
  - 1.11.0=pyhd8ed1ab_1

anyio:
  - 3.6.1=pyhd8ed1ab_1

aom:
  - 3.5.0=h27087fc_0

argon2_cffi:
  - 21.3.0=pyhd8ed1ab_0

argon2_cffi_bindings:
  - 21.2.0=py39hb9d737c_3

asteval:
  - 0.9.27=pyhd8ed1ab_0

asttokens:
  - 2.2.0=pyhd8ed1ab_0

async_generator:
  - 1.10=py_0

attr:
  - 2.5.1=h166bdaf_1

attrs:
  - 22.1.0=pyh71513ae_1

babel:
  - 2.11.0=pyhd8ed1ab_0

backcall:
  - 0.2.0=pyh9f0ad1d_0

backports:
  - 1.0=pyhd8ed1ab_3

beautifulsoup4:
  - 4.11.1=pyha770c72_0

binutils:
  - 2.39=hdd6e379_1

binutils_impl_linux_64:
  - 2.39=he00db2b_1

binutils_linux_64:
  - 2.39=h5fc0e48_11

bleach:
  - 5.0.1=pyhd8ed1ab_0

blosc:
  - 1.21.1=h83bc5f7_3

bokeh:
  - 2.4.3=pyhd8ed1ab_3

boost:
  - 1.78.0=py39h7c9e3ff_4

boost_cpp:
  - 1.78.0=h75c5d50_1

brotli:
  - 1.0.9=h166bdaf_8

brotli_bin:
  - 1.0.9=h166bdaf_8

brotlipy:
  - 0.7.0=py39hb9d737c_1005

brunsli:
  - 0.1=h9c3ff4c_0

bzip2:
  - 1.0.8=h7f98852_4

c_ares:
  - 1.18.1=h7f98852_0

c_blosc2:
  - 2.5.0=h7a311fb_0

ca_certificates:
  - 2022.9.24=ha878542_0

cached_property:
  - 1.5.2=hd8ed1ab_1

cached_property:
  - 1.5.2=pyha770c72_1

cairo:
  - 1.16.0=ha61ee94_1014

caproto:
  - 1.0.0=pyhd8ed1ab_0

certifi:
  - 2022.9.24=pyhd8ed1ab_0

cffi:
  - 1.15.1=py39he91dace_2

cfitsio:
  - 4.2.0=hd9d235c_0

charls:
  - 2.3.4=h9c3ff4c_0

charset_normalizer:
  - 2.1.1=pyhd8ed1ab_0

click:
  - 8.1.3=unix_pyhd8ed1ab_2

cloudpickle:
  - 2.2.0=pyhd8ed1ab_0

clyent:
  - 1.2.2=py_1

cmake:
  - 3.25.0=h816a3e0_0

colorama:
  - 0.4.6=pyhd8ed1ab_0

colorcet:
  - 3.0.1=pyhd8ed1ab_0

comm:
  - 0.1.1=pyhd8ed1ab_0

conda_package_handling:
  - 1.9.0=py39hb9d737c_1

contourpy:
  - 1.0.6=py39hf939315_0

cryptography:
  - 38.0.4=py39hd97740a_0

curio:
  - 1.4=py_0

curl:
  - 7.86.0=h7bff187_1

cycler:
  - 0.11.0=pyhd8ed1ab_0

cython:
  - 0.29.32=py39h5a03fae_1

cytoolz:
  - 0.12.0=py39hb9d737c_1

dask:
  - 2022.11.1=pyhd8ed1ab_0

dask_core:
  - 2022.11.1=pyhd8ed1ab_0

dav1d:
  - 1.0.0=h166bdaf_1

dbus:
  - 1.13.6=h5008d03_3

debugpy:
  - 1.6.4=py39h5a03fae_0

decorator:
  - 5.1.1=pyhd8ed1ab_0

defusedxml:
  - 0.7.1=pyhd8ed1ab_0

dill:
  - 0.3.6=pyhd8ed1ab_1

distlib:
  - 0.3.6=pyhd8ed1ab_0

distributed:
  - 2022.11.1=pyhd8ed1ab_0

dnspython:
  - 2.2.1=pyhd8ed1ab_0

dpkt:
  - 1.9.8=pyhd8ed1ab_0

entrypoints:
  - 0.4=pyhd8ed1ab_0

epics_base:
  - 7.0.6.1=h8c3723f_0

exceptiongroup:
  - 1.0.4=pyhd8ed1ab_0

executing:
  - 1.2.0=pyhd8ed1ab_0

expat:
  - 2.5.0=h27087fc_0

fabio:
  - 0.14.0=py39h2ae25f5_2

ffmpeg:
  - 4.4.2=gpl_hc51e5dc_110

fftw:
  - 3.3.10=nompi_hf0379b8_105

filelock:
  - 3.8.0=pyhd8ed1ab_0

flask:
  - 2.2.2=pyhd8ed1ab_0

flit_core:
  - 3.8.0=pyhd8ed1ab_0

font_ttf_dejavu_sans_mono:
  - 2.37=hab24e00_0

font_ttf_inconsolata:
  - 3.000=h77eed37_0

font_ttf_source_code_pro:
  - 2.038=h77eed37_0

font_ttf_ubuntu:
  - 0.83=hab24e00_0

fontconfig:
  - 2.14.1=hc2a2eb6_0

fonts_conda_ecosystem:
  - 1=0

fonts_conda_forge:
  - 1=0

fonttools:
  - 4.38.0=py39hb9d737c_1

freeglut:
  - 3.2.2=h9c3ff4c_1

freetype:
  - 2.12.1=hca18f0e_1

fsspec:
  - 2022.11.0=pyhd8ed1ab_0

future:
  - 0.18.2=pyhd8ed1ab_6

gcc:
  - 10.4.0=hb92f740_11

gcc_impl_linux_64:
  - 10.4.0=h5231bdf_19

gcc_linux_64:
  - 10.4.0=h9215b83_11

gettext:
  - 0.21.1=h27087fc_0

gfortran:
  - 10.4.0=h0c96582_11

gfortran_impl_linux_64:
  - 10.4.0=h7d168d2_19

gfortran_linux_64:
  - 10.4.0=h69d5af5_11

giflib:
  - 5.2.1=h36c2ea0_2

git:
  - 2.38.1=pl5321h5e804b7_1

glib:
  - 2.74.1=h6239696_1

glib_tools:
  - 2.74.1=h6239696_1

glymur:
  - 0.12.1=pyhd8ed1ab_0

gmp:
  - 6.2.1=h58526e2_0

gnutls:
  - 3.7.8=hf3e180e_0

graphite2:
  - 1.3.13=h58526e2_1001

gsl:
  - 2.7=he838d99_0

gst_plugins_base:
  - 1.20.3=hf6a322e_0

gstreamer:
  - 1.20.3=hd4edc92_2

gunicorn:
  - 20.1.0=py39hf3d152e_3

gxx:
  - 10.4.0=hb92f740_11

gxx_impl_linux_64:
  - 10.4.0=h5231bdf_19

gxx_linux_64:
  - 10.4.0=h6e491c6_11

h5netcdf:
  - 1.1.0=pyhd8ed1ab_0

h5py:
  - 3.7.0=nompi_py39h63b1161_100

harfbuzz:
  - 5.3.0=h418a68e_0

hdf5:
  - 1.12.1=nompi_h2386368_104

hdf5plugin:
  - 3.3.1=py39h8d5ab89_0

heapdict:
  - 1.0.1=py_0

holoviews:
  - 1.15.2=pyhd8ed1ab_0

icu:
  - 70.1=h27087fc_0

idna:
  - 3.4=pyhd8ed1ab_0

imagecodecs:
  - 2022.9.26=py39hf32c164_4

imageio:
  - 2.22.4=pyhfa7a67d_1

importlib_metadata:
  - 5.1.0=pyha770c72_0

importlib_resources:
  - 5.10.0=pyhd8ed1ab_0

iniconfig:
  - 1.1.1=pyh9f0ad1d_0

ipykernel:
  - 6.18.2=pyh210e3f2_0

ipympl:
  - 0.9.2=pyhd8ed1ab_0

ipython:
  - 8.6.0=pyh41d4057_1

ipython_genutils:
  - 0.2.0=py_1

ipywidgets:
  - 8.0.2=pyhd8ed1ab_1

itsdangerous:
  - 2.1.2=pyhd8ed1ab_0

jack:
  - 1.9.18=h8c3723f_1002

jasper:
  - 2.0.33=ha77e612_0

jedi:
  - 0.18.2=pyhd8ed1ab_0

jinja2:
  - 3.1.2=pyhd8ed1ab_1

joblib:
  - 1.2.0=pyhd8ed1ab_0

jpeg:
  - 9e=h166bdaf_2

json5:
  - 0.9.5=pyh9f0ad1d_0

jsonschema:
  - 4.17.1=pyhd8ed1ab_0

jupyter:
  - 1.0.0=py39hf3d152e_7

jupyter_client:
  - 7.3.4=pyhd8ed1ab_0

jupyter_console:
  - 6.4.4=pyhd8ed1ab_0

jupyter_core:
  - 5.0.0=py39hf3d152e_0

jupyter_server:
  - 1.23.3=pyhd8ed1ab_0

jupyterlab:
  - 3.5.0=pyhd8ed1ab_0

jupyterlab_pygments:
  - 0.2.2=pyhd8ed1ab_0

jupyterlab_server:
  - 2.16.3=pyhd8ed1ab_0

jupyterlab_widgets:
  - 3.0.3=pyhd8ed1ab_0

jxrlib:
  - 1.1=h7f98852_2

kafka_python:
  - 2.0.2=pyh9f0ad1d_0

kernel_headers_linux_64:
  - 2.6.32=he073ed8_15

keyutils:
  - 1.6.1=h166bdaf_0

kiwisolver:
  - 1.4.4=py39hf939315_1

krb5:
  - 1.19.3=h3790be6_0

krtc:
  - 0.2.0=pyhd8ed1ab_0

lame:
  - 3.100=h166bdaf_1003

lcms2:
  - 2.14=h6ed2654_0

ld_impl_linux_64:
  - 2.39=hcc3a1bd_1

lerc:
  - 4.0.0=h27087fc_0

libaec:
  - 1.0.6=h9c3ff4c_0

libavif:
  - 0.11.1=h5cdd6b5_0

libblas:
  - 3.9.0=16_linux64_openblas

libbrotlicommon:
  - 1.0.9=h166bdaf_8

libbrotlidec:
  - 1.0.9=h166bdaf_8

libbrotlienc:
  - 1.0.9=h166bdaf_8

libcap:
  - 2.64=ha37c62d_0

libcblas:
  - 3.9.0=16_linux64_openblas

libclang:
  - 14.0.6=default_h2e3cab8_0

libclang13:
  - 14.0.6=default_h3a83d3e_0

libcups:
  - 2.3.3=h3e49a29_2

libcurl:
  - 7.86.0=h7bff187_1

libdb:
  - 6.2.32=h9c3ff4c_0

libdeflate:
  - 1.14=h166bdaf_0

libdrm:
  - 2.4.114=h166bdaf_0

libedit:
  - 3.1.20191231=he28a2e2_2

libev:
  - 4.33=h516909a_1

libevent:
  - 2.1.10=h9b69904_4

libffi:
  - 3.4.2=h7f98852_5

libflac:
  - 1.3.4=h27087fc_0

libgcc_devel_linux_64:
  - 10.4.0=hd38fd1e_19

libgcc_ng:
  - 12.2.0=h65d4601_19

libgfortran_ng:
  - 12.2.0=h69a702a_19

libgfortran5:
  - 12.2.0=h337968e_19

libglib:
  - 2.74.1=h606061b_1

libglu:
  - 9.0.0=he1b5a44_1001

libgomp:
  - 12.2.0=h65d4601_19

libiconv:
  - 1.17=h166bdaf_0

libidn2:
  - 2.3.4=h166bdaf_0

liblapack:
  - 3.9.0=16_linux64_openblas

liblapacke:
  - 3.9.0=16_linux64_openblas

libllvm11:
  - 11.1.0=he0ac6c6_5

libllvm14:
  - 14.0.6=he0ac6c6_1

libnghttp2:
  - 1.47.0=hdcd2b5c_1

libnsl:
  - 2.0.0=h7f98852_0

libogg:
  - 1.3.4=h7f98852_1

libopenblas:
  - 0.3.21=pthreads_h78a6416_3

libopencv:
  - 4.6.0=py39he08f5c2_2

libopus:
  - 1.3.1=h7f98852_1

libpciaccess:
  - 0.17=h166bdaf_0

libpng:
  - 1.6.39=h753d276_0

libpq:
  - 14.5=hd77ab85_1

libprotobuf:
  - 3.20.2=h6239696_0

libsanitizer:
  - 10.4.0=h5246dfb_19

libsndfile:
  - 1.0.31=h9c3ff4c_1

libsodium:
  - 1.0.18=h36c2ea0_1

libsqlite:
  - 3.40.0=h753d276_0

libssh2:
  - 1.10.0=haa6b8db_3

libstdcxx_devel_linux_64:
  - 10.4.0=hd38fd1e_19

libstdcxx_ng:
  - 12.2.0=h46fd767_19

libtasn1:
  - 4.19.0=h166bdaf_0

libtiff:
  - 4.4.0=h55922b4_4

libtool:
  - 2.4.6=h9c3ff4c_1008

libudev1:
  - 252=h166bdaf_0

libunistring:
  - 0.9.10=h7f98852_0

libuuid:
  - 2.32.1=h7f98852_1000

libuv:
  - 1.44.2=h166bdaf_0

libva:
  - 2.16.0=h166bdaf_0

libvorbis:
  - 1.3.7=h9c3ff4c_0

libvpx:
  - 1.11.0=h9c3ff4c_3

libwebp:
  - 1.2.4=h522a892_0

libwebp_base:
  - 1.2.4=h166bdaf_0

libxcb:
  - 1.13=h7f98852_1004

libxkbcommon:
  - 1.0.3=he3ba5ed_0

libxml2:
  - 2.10.3=h7463322_0

libxslt:
  - 1.1.37=h873f0b0_0

libzlib:
  - 1.2.13=h166bdaf_4

libzopfli:
  - 1.0.3=h9c3ff4c_0

llvmlite:
  - 0.39.1=py39h7d9a04d_1

lmfit:
  - 1.0.3=pyhd8ed1ab_0

locket:
  - 1.0.0=pyhd8ed1ab_0

lxml:
  - 4.9.1=py39h91f8133_1

lz4:
  - 4.0.2=py39h029007f_0

lz4_c:
  - 1.9.3=h9c3ff4c_1

lzo:
  - 2.10=h516909a_1000

mako:
  - 1.2.4=pyhd8ed1ab_0

markdown:
  - 3.4.1=pyhd8ed1ab_0

markupsafe:
  - 2.1.1=py39hb9d737c_2

matplotlib:
  - 3.6.2=py39hf3d152e_0

matplotlib_base:
  - 3.6.2=py39hf9fd14e_0

matplotlib_inline:
  - 0.1.6=pyhd8ed1ab_0

mistune:
  - 2.0.4=pyhd8ed1ab_0

mpi:
  - 1.0=openmpi

mpi4py:
  - 3.1.4=py39h5418507_0

msgpack_python:
  - 1.0.4=py39hf939315_1

munkres:
  - 1.1.4=pyh9f0ad1d_0

mypy_extensions:
  - 0.4.3=py39hf3d152e_6

mysql:
  - 5.7.20=hf484d3e_1001

mysql_common:
  - 8.0.31=haf5c9bc_0

mysql_libs:
  - 8.0.31=h28c427c_0

mysqlclient:
  - 2.0.3=py39h5a03fae_4

nbclassic:
  - 0.4.8=pyhd8ed1ab_0

nbclient:
  - 0.7.0=pyhd8ed1ab_0

nbconvert:
  - 7.2.5=pyhd8ed1ab_0

nbconvert_core:
  - 7.2.5=pyhd8ed1ab_0

nbconvert_pandoc:
  - 7.2.5=pyhd8ed1ab_0

nbformat:
  - 5.7.0=pyhd8ed1ab_0

ncurses:
  - 6.3=h27087fc_1

ndarray_psana:
  - 1.1.11=hbdd6aa6_30

nest_asyncio:
  - 1.5.6=pyhd8ed1ab_0

netifaces:
  - 0.11.0=py39hb9d737c_1

nettle:
  - 3.8.1=hc379101_1

networkx:
  - 2.8.8=pyhd8ed1ab_0

nomkl:
  - 1.0=h5ca1d4c_0

notebook:
  - 6.5.2=pyha770c72_1

notebook_shim:
  - 0.2.2=pyhd8ed1ab_0

nspr:
  - 4.32=h9c3ff4c_1

nss:
  - 3.78=h2350873_0

numba:
  - 0.56.4=py39h61ddf18_0

numexpr:
  - 2.8.3=py39hf625f34_101

numpy:
  - 1.23.5=py39h3d75532_0

opencv:
  - 4.6.0=py39hf3d152e_2

openh264:
  - 2.3.1=h27087fc_1

openjpeg:
  - 2.5.0=h7d73246_1

openmpi:
  - 4.1.4=ha1ae619_101

openssl:
  - 1.1.1s=h166bdaf_0

outcome:
  - 1.2.0=pyhd8ed1ab_0

p11_kit:
  - 0.24.1=hc5aa10d_0

packaging:
  - 21.3=pyhd8ed1ab_0

pandas:
  - 1.5.2=py39h4661b88_0

pandoc:
  - 2.19.2=h32600fe_1

pandocfilters:
  - 1.5.0=pyhd8ed1ab_0

panel:
  - 0.14.1=pyhd8ed1ab_0

param:
  - 1.12.2=pyh6c4a22f_0

parso:
  - 0.8.3=pyhd8ed1ab_0

partd:
  - 1.3.0=pyhd8ed1ab_0

patsy:
  - 0.5.3=pyhd8ed1ab_0

pcre2:
  - 10.40=hc3806b6_0

perl:
  - 5.32.1=2_h7f98852_perl5

pexpect:
  - 4.8.0=pyh1a96a4e_2

pickleshare:
  - 0.7.5=py_1003

pillow:
  - 9.2.0=py39hf3a2cdf_3

pip:
  - 22.3.1=pyhd8ed1ab_0

pixman:
  - 0.40.0=h36c2ea0_0

pkgutil_resolve_name:
  - 1.3.10=pyhd8ed1ab_0

platformdirs:
  - 2.5.2=pyhd8ed1ab_1

plotly:
  - 5.11.0=pyhd8ed1ab_0

pluggy:
  - 1.0.0=pyhd8ed1ab_5

ply:
  - 3.11=py_1

portaudio:
  - 19.6.0=h57a0ea0_5

prometheus_client:
  - 0.15.0=pyhd8ed1ab_0

prompt_toolkit:
  - 3.0.33=pyha770c72_0

prompt_toolkit:
  - 3.0.33=hd8ed1ab_0

psana:
  - 4.0.48=py39he10e754_0

psgeom:
  - 1.1.2=pyh1fa8f55_21

psocake:
  - 01.00.20=py39hb3f4c33_8

psutil:
  - 5.9.4=py39hb9d737c_0

pthread_stubs:
  - 0.4=h36c2ea0_1001

ptyprocess:
  - 0.7.0=pyhd3deb0d_0

pulseaudio:
  - 14.0=h7f54b18_8

pure_eval:
  - 0.2.2=pyhd8ed1ab_0

py_opencv:
  - 4.6.0=py39hef51801_2

pycparser:
  - 2.21=pyhd8ed1ab_0

pyct:
  - 0.4.6=py_0

pyct_core:
  - 0.4.6=py_0

pyepics:
  - 3.5.0=py39hf3d152e_3

pyfai:
  - 0.21.3=hd8ed1ab_0

pyfai_base:
  - 0.21.3=py39h1832856_0

pygments:
  - 2.13.0=pyhd8ed1ab_0

pykerberos:
  - 1.2.4=py39ha6ecad8_2

pymongo:
  - 4.3.3=py39h5a03fae_0

pyopenssl:
  - 22.1.0=pyhd8ed1ab_0

pyparsing:
  - 3.0.9=pyhd8ed1ab_0

pyqt:
  - 5.15.7=py39h18e9c17_0

pyqt5_sip:
  - 12.11.0=py39h5a03fae_0

pyqtgraph:
  - 0.13.1=pyhd8ed1ab_1

pyrsistent:
  - 0.19.2=py39hb9d737c_0

pysocks:
  - 1.7.1=pyha2e5f31_6

pytables:
  - 3.7.0=py39h2669a42_0

pytest:
  - 7.2.0=pyhd8ed1ab_2

python:
  - 3.9.15=h47a2c10_0_cpython

python_dateutil:
  - 2.8.2=pyhd8ed1ab_0

python_fastjsonschema:
  - 2.16.2=pyhd8ed1ab_0

python_abi:
  - 3.9=3_cp39

pytz:
  - 2022.6=pyhd8ed1ab_0

pyviz_comms:
  - 2.2.1=pyhd8ed1ab_1

pywavelets:
  - 1.3.0=py39h2ae25f5_2

pyyaml:
  - 6.0=py39hb9d737c_5

pyzmq:
  - 24.0.1=py39headdf64_1

qt:
  - 5.15.4=hf11cfaa_0

qt_main:
  - 5.15.4=ha5833f6_2

qt_webengine:
  - 5.15.4=hcbadb6c_3

qtconsole:
  - 5.4.0=pyhd8ed1ab_0

qtconsole_base:
  - 5.4.0=pyha770c72_0

qtpy:
  - 2.3.0=pyhd8ed1ab_0

readline:
  - 8.1.2=h0f457ee_0

requests:
  - 2.28.1=pyhd8ed1ab_1

rhash:
  - 1.4.3=h166bdaf_0

scikit_beam:
  - 0.0.24=py39h2ae25f5_3

scikit_image:
  - 0.19.3=py39h4661b88_2

scikit_learn:
  - 1.1.3=py39hd5c8da3_1

scipy:
  - 1.9.3=py39hddc5342_2

scons:
  - 4.4.0=py39hf3d152e_1

seaborn:
  - 0.12.1=hd8ed1ab_0

seaborn_base:
  - 0.12.1=pyhd8ed1ab_0

send2trash:
  - 1.8.0=pyhd8ed1ab_0

setuptools:
  - 65.5.1=pyhd8ed1ab_0

setuptools_scm:
  - 7.0.5=pyhd8ed1ab_1

silx:
  - 1.1.0=hd8ed1ab_0

silx_base:
  - 1.1.0=py39h4661b88_0

simplejson:
  - 3.18.0=py39hb9d737c_0

sip:
  - 6.6.2=py39h5a03fae_0

six:
  - 1.16.0=pyh6c4a22f_0

snappy:
  - 1.1.9=hbd366e4_2

sniffio:
  - 1.3.0=pyhd8ed1ab_0

sortedcontainers:
  - 2.4.0=pyhd8ed1ab_0

soupsieve:
  - 2.3.2.post1=pyhd8ed1ab_0

sqlite:
  - 3.40.0=h4ff8645_0

stack_data:
  - 0.6.2=pyhd8ed1ab_0

statsmodels:
  - 0.13.5=py39h2ae25f5_2

svt_av1:
  - 1.3.0=h27087fc_0

sysroot_linux_64:
  - 2.12=he073ed8_15

tblib:
  - 1.7.0=pyhd8ed1ab_0

tenacity:
  - 8.1.0=pyhd8ed1ab_0

terminado:
  - 0.17.0=pyh41d4057_0

threadpoolctl:
  - 3.1.0=pyh8a188c0_0

tifffile:
  - 2022.10.10=pyhd8ed1ab_0

tinycss2:
  - 1.2.1=pyhd8ed1ab_0

tk:
  - 8.6.12=h27826a3_0

toml:
  - 0.10.2=pyhd8ed1ab_0

tomli:
  - 2.0.1=pyhd8ed1ab_0

toolz:
  - 0.12.0=pyhd8ed1ab_0

tornado:
  - 6.1=py39hb9d737c_3

tqdm:
  - 4.64.1=pyhd8ed1ab_0

traitlets:
  - 5.5.0=pyhd8ed1ab_0

trio:
  - 0.22.0=py39hf3d152e_1

typing_extensions:
  - 4.4.0=hd8ed1ab_0

typing_extensions:
  - 4.4.0=pyha770c72_0

tzdata:
  - 2022f=h191b570_0

uncertainties:
  - 3.1.7=pyhd8ed1ab_0

unicodedata2:
  - 15.0.0=py39hb9d737c_0

urllib3:
  - 1.26.13=pyhd8ed1ab_0

virtualenv:
  - 20.17.0=py39hf3d152e_0

wcwidth:
  - 0.2.5=pyh9f0ad1d_2

webencodings:
  - 0.5.1=py_1

websocket_client:
  - 1.4.2=pyhd8ed1ab_0

werkzeug:
  - 2.2.2=pyhd8ed1ab_0

wheel:
  - 0.38.4=pyhd8ed1ab_0

widgetsnbextension:
  - 4.0.3=pyhd8ed1ab_0

x265:
  - 3.5=h924138e_3

xarray:
  - 2022.11.0=pyhd8ed1ab_0

xcb_util:
  - 0.4.0=h516909a_0

xcb_util_image:
  - 0.4.0=h166bdaf_0

xcb_util_keysyms:
  - 0.4.0=h516909a_0

xcb_util_renderutil:
  - 0.3.9=h166bdaf_0

xcb_util_wm:
  - 0.4.1=h516909a_0

xorg_fixesproto:
  - 5.0=h7f98852_1002

xorg_inputproto:
  - 2.3.2=h7f98852_1002

xorg_kbproto:
  - 1.0.7=h7f98852_1002

xorg_libice:
  - 1.0.10=h7f98852_0

xorg_libsm:
  - 1.2.3=hd9c2040_1000

xorg_libx11:
  - 1.7.2=h7f98852_0

xorg_libxau:
  - 1.0.9=h7f98852_0

xorg_libxdmcp:
  - 1.1.3=h7f98852_0

xorg_libxext:
  - 1.3.4=h7f98852_1

xorg_libxfixes:
  - 5.0.3=h7f98852_1004

xorg_libxi:
  - 1.7.10=h7f98852_0

xorg_libxrender:
  - 0.9.10=h7f98852_1003

xorg_renderproto:
  - 0.11.1=h7f98852_1002

xorg_xextproto:
  - 7.3.0=h7f98852_1002

xorg_xproto:
  - 7.0.31=h7f98852_1007

xraylib:
  - 4.1.3=py39h0e4d538_3

xtcav2:
  - 0.4=py39hb3f4c33_9

xz:
  - 5.2.6=h166bdaf_0

yaml:
  - 0.2.5=h7f98852_2

zeromq:
  - 4.3.4=h9c3ff4c_1

zfp:
  - 1.0.0=h27087fc_3

zict:
  - 2.2.0=pyhd8ed1ab_0

zipp:
  - 3.11.0=pyhd8ed1ab_0

zlib:
  - 1.2.13=h166bdaf_4

zlib_ng:
  - 2.0.6=h166bdaf_0

zstd:
  - 1.5.2=h6239696_4

